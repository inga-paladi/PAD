syntax = "proto3";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "shared/transaction.proto";

package meoworld.v1.blog;

option go_package = "meoworld-gateway/gen/blog";

service Blog {
  rpc Commit( CommitRequest ) returns ( CommitResponse ) { }
  rpc Cancel( CancelRequest ) returns ( CancelResponse ) { }
  rpc GetStatus( GetStatusRequest ) returns ( GetStatusResponse ) { }

  rpc PublishPost( PublishPostRequest ) returns ( PublishPostResponse ) {
    option (google.api.http) = {
      post: "/v1/blog/post"
      body: "*"
    };
  }
  rpc EditPost( EditPostRequest ) returns ( EditPostResponse ) {
    option (google.api.http) = {
      post: "/v1/blog/post/{guid}/edit"
      body: "*"
    };
  }
  rpc DeletePost( DeletePostRequest ) returns ( DeletePostResponse ) {
    option (google.api.http) = {
      post: "/v1/blog/post/{guid}/delete"
      body: "*"
    };
  }
  rpc ListPosts( ListPostsRequest ) returns ( ListPostsResponse ) {
    option (google.api.http) = {
      get: "/v1/blog/post"
    };
  }
  rpc GetPost( GetPostRequest ) returns ( GetPostResponse ) {
    option (google.api.http) = {
      get: "/v1/blog/post/{guid}"
    };
  }
  rpc Listen( ListenRequest ) returns ( stream ListenResponse ) {
    option (google.api.http) = {
      get: "/v1/blog/listen"
    };
  }
}

message CommitRequest {
  string transaction_id = 1;
}
message CommitResponse {
  // Empty for now
}

message CancelRequest {
  string transaction_id = 1;
}
message CancelResponse {
  // Empty for now
}

message GetStatusRequest {
  string transaction_id = 1;
}
message GetStatusResponse {
  shared.TransactionContext transaction_context = 1;
}

message PublishPostRequest {
  string title = 1;
  string content = 2;
}
message PublishPostResponse {
  shared.TransactionContext transaction_context = 2;
  string guid = 1;
}

message EditPostRequest {
  string guid = 1;
  string title = 2;
  string content = 3;
}
message EditPostResponse {
  shared.TransactionContext transaction_context = 1;
}

message DeletePostRequest {
  string guid = 1;
}
message DeletePostResponse {
  shared.TransactionContext transaction_context = 1;
}

message ListPostsRequest {
  // filters
  uint32 limit = 1;
  google.protobuf.Timestamp after_time = 2;
  google.protobuf.Timestamp before_time = 3;
}
message ListPostsResponse {
  repeated BlogPost posts = 1;
}

message GetPostRequest {
  string guid = 1;
}
message GetPostResponse {
  BlogPost post = 1;
}

message ListenRequest {
  // empty
}
message ListenResponse {
  EventType event_type = 1;
  oneof data {
    NewPostEvent new_post_event = 11;
  }
}

// Types (should be separate file, but keep it here for simplicity)
message BlogPost {
  string guid = 1;
  uint64 owner_id = 2;
  string title = 3;
  string content = 4;
  google.protobuf.Timestamp creation_time = 5;
  google.protobuf.Timestamp last_edited_time = 6;
}

enum EventType {
  EVENT_TYPE_UNSPECIFIED = 0;
  EVENT_TYPE_NEW_POST = 1;
}

message NewPostEvent {
  string guid = 1;
}
